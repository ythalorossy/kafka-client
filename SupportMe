-- KAFKA
-- configuration and boot

KAFKA_CLUSTER_ID="$( $(asdf where kafka)/bin/kafka-storage random-uuid )"

$( $(asdf where kafka)/bin/kafka-storage format -t $KAFKA_CLUSTER_ID -c $(asdf where kafka)/config/kraft/server.properties )

$( $(asdf where kafka)/bin/kafka-server-start $(asdf where kafka)/config/kraft/server.properties )

-- topics

$( $(asdf where kafka)/bin/kafka-topics --create --topic quickstart-events --bootstrap-server localhost:9092)

$(asdf where kafka)/bin/kafka-topics --describe --topic quickstart-events --bootstrap-server localhost:9092

-- producer

$(asdf where kafka)/bin/kafka-console-producer --topic quickstart-events --bootstrap-server localhost:9092
This is my first event
This is my second event

-- consumer

$(asdf where kafka)/bin/kafka-console-consumer --topic quickstart-events --from-beginning --bootstrap-server localhost:9092

-- listeners
edit server.properties

listeners=PLAINTEXT://172.x.y.z:9092
advertised.listeners=PLAINTEXT://172.x.y.z:9092

-- WSL 

-- port-forward from windows to WSL.
-- It is to make kafka (wsl) communicate with rabbitmq (docker), vice-versa
-- Kafka
netsh interface portproxy add v4tov4 listenport=9092 listenaddress=0.0.0.0 connectport=9092 connectaddress=172.18.23.194
-- rabbitmq
netsh interface portproxy add v4tov4 listenport=5672 listenaddress=0.0.0.0 connectport=5672 connectaddress=172.18.23.194

-- DOCKER 

-- Kafka UI
docker run -it -p 9090:8080 -e DYNAMIC_CONFIG_ENABLED=true provectuslabs/kafka-ui

-- RabbitMQ
docker run -it --rm --name rabbitmq -p 61613:61613 -p 5672:5672 -p 15672:15672 rabbitmq:3.12-management

-- Dockerfile
Created to start RabbitMQ + ManagementUI, install the rabbitmq_stomp plugin, and expose the port 61613, required by the plugin.
